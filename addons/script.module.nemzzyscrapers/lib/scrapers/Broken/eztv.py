import requestsimport refrom kodi_six import xbmc, xbmcgui, xbmcaddonfrom six import PY2dialog = xbmcgui.Dialog()from bs4 import BeautifulSoupNotice = xbmc.LOGNOTICE if PY2 else xbmc.LOGINFOHeaders = {'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36' }class Scraper:	def __init__(self):		self.Base = 'https://eztv.re/'		self.Search = 'search/%s'		self.links = []	def Index(self,type, term,year,imdb):		try:			year = year.strip()			MovieTitle = term			if type == 'TV':				term = term.replace(' ','-')				try:					found = 0					Term = term.replace(' ','+').replace(':','')					link = requests.get(self.Base + self.Search %Term ,headers=Headers).text					soup = BeautifulSoup(link,'html.parser')					data = soup.find_all("td",  class_={'forum_thread_post'})					for i in data:						try:							foundname = i.a['title']							if MovieTitle.lower() in foundname.lower():								foundmag = i.a['href']								if 'magnet' in foundmag:									if '1080' in foundname:										qual = 'HD'										quality = '6'									elif '720' in foundname:										qual = 'HD'										quality = '7'									elif 'hdtv' in foundname.lower():										qual = 'HD'										quality = '7'									else:										qual = 'SD'										quality = '8'									title = ('[COLOR yellow]EZTV ( Real Debrid ) | %s | %s[/COLOR]' % (qual,MovieTitle))									self.links.append({'title': title, 'url': foundmag, 'quality': quality})						except: pass					if len(self.links) < 1: xbmc.log("No Results From ::: eztv" , level=Notice) 					else: return self.links				except Exception as c:					xbmc.log("SCRAPER ERROR 123  ::: %s" %c , level=Notice)			else: xbmc.log("SCRAPER 123 TVSHOWS ONLY  ::: %s" %term.title() , level=Notice)		except Exception as c:			xbmc.log("SCRAPER ERROR EZTV  ::: %s" %c , level=Notice)