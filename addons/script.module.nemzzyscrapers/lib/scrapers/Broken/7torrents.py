import requestsimport refrom kodi_six import xbmc, xbmcgui, xbmcaddonfrom six import PY2from bs4 import BeautifulSoupHeaders = {'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36' }dialog = xbmcgui.Dialog()Notice = xbmc.LOGNOTICE if PY2 else xbmc.LOGINFOclass Scraper:    def __init__(self):        self.Base = 'https://www.7torrents.cc/search?query=%s&sort=seeders'        self.Search = ('?query=')        self.links = []    def Index(self,type, term,year,imdb):        try:            if type == 'TV':                MovieName = term                term = term.replace(' ','+')                link = requests.get(self.Base %term, headers=Headers).text                soup = BeautifulSoup(link,'html.parser')                r = soup.find_all('div' , class_={'media'})                for i in r:                    try:                        title = i['data-name']                        url2 = i.find('div', class_={'media-right'}).a['href']                        if MovieName.lower() in title.lower().replace('.',' '):                                if 'uhd' in title.lower(): sort = '5' ; qual = '4K UHD'                                elif '2160' in title.lower(): sort = '5'; qual = '4K UHD'                                elif '1080' in title.lower(): sort = '6'; qual = 'FHD'                                elif '720' in title.lower(): sort = '7'; qual = 'HD'                                elif 'hdtv' in title.lower(): sort = '7'; qual = 'HD'                                else : sort = '8'; qual = 'SD'                                name = ('7Torrents ( Debrid ) | %s | %s' %(qual,MovieName))                                self.links.append({'title': name, 'url': url2, 'quality' : sort, 'Debrid' : True, 'Direct' : False})                    except: pass                if len(self.links) < 1: xbmc.log("No Results From ::: 7Torrents" , level=Notice)                 else: return self.links            else:                MovieName = term                term = term.replace(' ','+')                link = requests.get(self.Base %term, headers=Headers).text                soup = BeautifulSoup(link,'html.parser')                r = soup.find_all('div' , class_={'media'})                for i in r:                    try:                        title = i['data-name']                        url2 = i.find('div', class_={'media-right'}).a['href']                        if MovieName.lower() in title.lower().replace('.',' ') and year.strip() in title.lower().replace('.',' '):                                if 'uhd' in title.lower(): sort = '5' ; qual = '4K UHD'                                elif '2160' in title.lower(): sort = '5'; qual = '4K UHD'                                elif '1080' in title.lower(): sort = '6'; qual = 'FHD'                                elif '720' in title.lower(): sort = '7'; qual = 'HD'                                elif 'hdtv' in title.lower(): sort = '7'; qual = 'HD'                                else : sort = '8'; qual = 'SD'                                name = ('7Torrents ( Debrid ) | %s | %s' %(qual,MovieName))                                self.links.append({'title': name, 'url': url2, 'quality' : sort, 'Debrid' : True, 'Direct' : False})                    except: pass                if len(self.links) < 1: xbmc.log("No Results From ::: 7Torrents" , level=Notice)                 else: return self.links        except Exception as c:            xbmc.log("SCRAPER ERROR 7Torrents  ::: %s" %c , level=Notice)