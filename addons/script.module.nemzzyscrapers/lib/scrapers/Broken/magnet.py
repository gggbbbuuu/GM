import requestsimport refrom kodi_six import xbmc, xbmcgui, xbmcaddonfrom six import PY2from bs4 import BeautifulSoupfrom tools import cfscrapecloudflare = cfscrape.create_scraper()dialog = xbmcgui.Dialog()Notice = xbmc.LOGNOTICE if PY2 else xbmc.LOGINFOua = {"User-Agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_1 like Mac OS X) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.0 Mobile/14E304 Safari/602.1"}class Scraper:    def __init__(self):        self.Base = 'https://www.magnetdl.com/'        self.Search = ('')        self.links = []    def Index(self,type, term,year,imdb):        try:            if type == 'TV':                MovieName = term                term = term.replace(' ','-')                t1 = term[0]                fulllink = (self.Base+'%s/%s/' % (t1,term)).lower()                xbmc.log("Magnet LINK  ::: %s" %fulllink , level=Notice)                link = cloudflare.get(fulllink,headers=ua).text                soup = BeautifulSoup(link,'html.parser')                data = soup.find('table', class_={'download'})                for i in data.select("a[href*=magnet]"):                    link = i['href']                    captacha = link.replace('+',' ').replace('.',' ')                    if MovieName.lower() in captacha.lower():                        if 'uhd' in link.lower(): sort = '5' ; qual = '4K UHD'                        elif '2160' in link.lower(): sort = '5'; qual = '4K UHD'                        elif '1080' in link.lower(): sort = '6'; qual = 'FHD'                        elif '720' in link.lower(): sort = '7'; qual = 'HD'                        else : sort = '8'; qual = 'SD'                        title = ('[COLOR yellow]Magnet DL ( Debrid ) | %s | %s' % (qual,MovieName))                        self.links.append({'title': title, 'url': link, 'quality' : sort, 'Debrid' : True, 'Direct' : False})                if len(self.links) < 1: xbmc.log("No Results From ::: Magnet" , level=Notice)                 else: return self.links            else:                MovieName = term                term = term.replace(' ','-')                t1 = term[0]                fulllink = (self.Base+'%s/%s/' % (t1,term)).lower()                xbmc.log("Magnet LINK  ::: %s" %fulllink , level=Notice)                link = cloudflare.get(fulllink,headers=ua).text                soup = BeautifulSoup(link,'html.parser')                data = soup.find('table', class_={'download'})                for i in data.select("a[href*=magnet]"):                    link = i['href']                    captacha = link.replace('+',' ').replace('.',' ')                    if MovieName.lower() in captacha.lower() and year.strip() in captacha.lower():                        if 'uhd' in link.lower(): sort = '5' ; qual = '4K UHD'                        elif '2160' in link.lower(): sort = '5'; qual = '4K UHD'                        elif '1080' in link.lower(): sort = '6'; qual = 'FHD'                        elif '720' in link.lower(): sort = '7'; qual = 'HD'                        else : sort = '8'; qual = 'SD'                        title = ('[COLOR yellow]Magnet DL ( Debrid ) | %s | %s' % (qual,MovieName))                        self.links.append({'title': title, 'url': link, 'quality' : sort, 'Debrid' : True, 'Direct' : False})                if len(self.links) < 1: xbmc.log("No Results From ::: Magnet" , level=Notice)                 else: return self.links        except Exception as c:                xbmc.log("SCRAPER ERROR Magnet  ::: %s" %c , level=Notice)