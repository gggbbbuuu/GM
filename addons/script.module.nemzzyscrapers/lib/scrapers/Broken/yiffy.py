import requestsimport refrom kodi_six import xbmc, xbmcgui, xbmcaddonfrom six import PY2dialog = xbmcgui.Dialog()Headers = {'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36' }Notice = xbmc.LOGNOTICE if PY2 else xbmc.LOGINFOclass Scraper:	def __init__(self):		self.Base = ('https://yts.unblockit.me/api/v2/list_movies.json?query_term=%s')		self.Search = ('')		self.links = []	def Index(self,type, term,year,imdb):		year = year.strip()		if type == 'MOVIE':			try:				found = 0				Checker = term				Term = term.replace(' ','+').replace(':','')				link = requests.get(self.Base %Term ,headers=Headers).json()				for i in link['data']['movies']:					title = i['title_long']					movieyear = i['year']					if Checker.lower() in title.lower() and year in title:						pattern = r''''hash'.+?['"](.*?)['"].+?quality.+?['"](.*?)['"]'''						findsource = re.findall(pattern,str(i),flags=re.DOTALL)						if findsource: found += 1						for hashs,standard in findsource:							if '720' in standard:								qual = 'HD'								quality = '7'							elif '2160' in standard:								qual = '4K UHD'								quality = '5'							elif '1080' in standard:								qual = 'FHD'								quality = '6'							elif '3d' in standard:								qual = '3D'								quality = '6'							else:								qual = standard								quality = '7'							mtitle = ('[COLOR yellow]Yiffy ( Debrid ) | %s | %s[/COLOR]' % (qual,title))							finallink = ('magnet:?xt=urn:btih:%s' %hashs)							self.links.append({'title': mtitle, 'url': finallink, 'quality': quality, 'Debrid' : True, 'Direct' : False})				if len(self.links) < 1: xbmc.log("No Results From ::: Yiffy" , level=Notice) 				else: return self.links			except Exception as c:				xbmc.log("SCRAPER ERROR Yiffy  ::: %s" %c , level=Notice)		else: pass