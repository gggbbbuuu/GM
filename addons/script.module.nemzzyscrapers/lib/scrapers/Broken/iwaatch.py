import requestsfrom kodi_six import xbmc, xbmcgui, xbmcaddonfrom six.moves.urllib.parse import urlencodefrom six import PY2from bs4 import BeautifulSoupdialog = xbmcgui.Dialog()Headers = {'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36' }ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36'GoodFiles = ['.mp4', '.mkv']Notice = xbmc.LOGNOTICE if PY2 else xbmc.LOGINFOclass Scraper:    def __init__(self):        self.Base = 'https://iwaatch.com'        self.Search = ('/movie/%s')        self.links = []    def Index(self,type,term,year,imdb):        if type == 'MOVIE':            try:                filmname = term.title()                term = term.replace(' ','_').replace(':','%3A')                link = requests.get(self.Base+self.Search % term,headers=Headers)                cookiegrab = link.cookies                ref = (self.Base+self.Search % term)                soup = BeautifulSoup(link.text, 'html5lib')                data = soup.find('span', class_={'download-q'})                for links in data.find_all('a'):                    source = links['href']                    source = ("%s|User-Agent=%s&Referer=%s&Cookie=%s" % (source,ua,ref,urlencode(cookiegrab)))                    qual = links.text                    if '360' in qual:                        title = ('IWAATCH ( DIRECT ) | SD | %s' % filmname)                        quality = '4'                    elif '480' in qual:                        title = ('IWAATCH ( DIRECT ) | SD | %s' % filmname)                        quality = '4'                    elif '720' in qual:                        title = ('IWAATCH ( DIRECT ) | HD | %s' % filmname)                        quality = '3'                    elif '1080' in qual:                        title = ('IWAATCH ( DIRECT ) | FHD | %s' % filmname)                        quality = '2'                    else:                        title = ('IWAATCH ( DIRECT )| Unkown | %s' % filmname)                        quality = '4'                    self.links.append({'title': title, 'url': source, 'quality': quality, 'Debrid' : False, 'Direct' : True})                if len(self.links) < 1: xbmc.log("No Results From ::: Iwaatch" , level=Notice)                 else: return self.links            except Exception as c:                xbmc.log("SCRAPER ERROR IWAATCH  ::: %s" %c , level=Notice)        else: xbmc.log("SCRAPER IWAATCH Movie ONLY  ::: %s" %term.title() , level=Notice)