import requestsimport refrom kodi_six import xbmc, xbmcgui, xbmcaddonfrom six import PY2dialog = xbmcgui.Dialog()Headers = {'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36' }Notice = xbmc.LOGNOTICE if PY2 else xbmc.LOGINFOclass Scraper:    def __init__(self):        self.Base = ('https://hdm.to/%s')        self.Search = ('')        self.links = []    def Index(self,type, term,year,imdb):        year = year.strip()        if type == 'MOVIE':            try:                found = 0                Checker = term                MovieName = term                Term = term.replace(' ','-').replace(':','')                NewRef = self.Base %Term                link = requests.get(self.Base %Term,headers=Headers).text                sources = re.findall('''iframe.*?src=['"](https://hdm.to/src/player/.*?)['"]''',link,flags=re.DOTALL)[0]                #dialog.ok("SOURCES",str(sources))                part1 = sources.split('v=')[1]                ua = {"User-Agent":"Opera/9.80 (J2ME/MIDP; Opera Mini/5.1.21214/28.2725; U; ru) Presto/2.8.119 Version/11.10",                      "Referer" : NewRef}                api = requests.get(sources,headers=ua).text                part2 = re.findall('''(.playlist.*?)['"]''',api,flags=re.DOTALL)[0]                final = part1.replace('https://1o.to/','https://hls.1o.to/vod/').replace(' ', '%20') + part2                mtitle = ('HDM ( DIRECT ) | FHD | %s' % MovieName)                quality = '2'                self.links.append({'title': mtitle, 'url': final, 'quality': quality, 'Debrid' : False, 'Direct' : True})                if len(self.links) < 1: xbmc.log("No Results From ::: HDM" , level=Notice)                 else: return self.links            except Exception as c:                xbmc.log("SCRAPER ERROR HDM  ::: %s" %c , level=Notice)        else: pass